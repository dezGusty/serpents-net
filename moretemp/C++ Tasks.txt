Curs 5 - (august 1)

- Pointer to structures
- Pointer to functions => present with classes
- Const correctness.
  - weak because... pointers.
  - la ce foloseste? (libraries... folosite relativ incorect).
- Vectors, Strings, Template<> notation. 
- Classes and diffs to Structs
  - Constructor
  - Destructor
  - Handling of CTOR/DTOR in the case of pass by value, ref, ptr.
---
To understand recursion.
You must first understand recursion. 
---
The reason why we're anti-union is that we have class. Of course we all know that class is something you inherit, 
and so it's something that those who write in C will never use. 
---
Two strings walk into a bar.

The first one says: "I'll have a beer please."
The second one says: "I'll have a i4n oainfian enf%&8728&"*$_%+"nr8n R8"
The first one string then says: "Please excuse my friend, he's not null terminated!" 
---
"Knock Knock"
"Who's there?"
*very long pause*
"Java"
---
"Knock Knock"
"Who's there?"
C+ •?YYwÌLÿ´ÅgýÏUæ¸Segmentation fault
---

Current C++ project proposals:

Generic guidelines:
- cross platform
- a consistent way of solving problems
- get the team used to using a common style

What's in it for me?
- I get to focus the effort on projects that interest me.

What's in it for Siemens?
- training of employees.

What's in it for the employees?
- learn something.
- work together

Project interests for me to reuse in Siemens:
- network library: based on XmlRpc.
  server in C++; client in C++; optional: usable in C#
- network library: based on JsonRpc
  server in C++; client in C++; mandatory: usable in C#
  must share the same abstract interface with XmlRpc
==> replace library in ACT

- network library based on sockets
  should contain functionality to allow both servers and clients.
  optimized for high speed
  implementations for tcp (main) and udp (secondary).
  E.g. based on Asio

- games
  - 2d engine - OpenGL engine from SpaceInvaders.
  - 3d engine
  space invaders game
  controller logic in dedicated space, using network library and one of the engines.
  - integrate Lua.
  - configure with CMake.

Main question: where to store the projects?
Any enhancements to:
- guslib => github
- gussound (see if GRAL) => github
- serpents => github